{"version":3,"sources":["Routing/Header.jsx","Routing/GetStart.jsx","Routing/LandingPage.jsx","Routing/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","to","GetStart","src","alt","LandingPage","ContactPage","width","App","path","exact","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oYAIe,SAASA,IACpB,OACI,4BAAQC,UAAU,UACd,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,SAGf,yBAAKA,UAAU,2BAA2BC,GAAG,QACrC,wBAAID,UAAU,0CACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAME,GAAG,KACL,uBAAGF,UAAU,KAAI,2CAGzB,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAME,GAAG,YACL,uBAAGF,UAAU,KAAI,qD,MCnBlD,SAASG,IACpB,OACI,oCACI,kBAAC,EAAD,MACA,6BAASH,UAAU,QACf,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,aACX,yBAAKI,IAAI,4FAA4FC,IAAI,WAG7G,yBAAKL,UAAU,cACX,wBAAIA,UAAU,YAAd,yBACA,uBAAGA,UAAU,WAAb,yN,MCZb,SAASM,IACpB,OACI,6BACI,kBAAC,EAAD,MACA,6BAASL,GAAG,cAAcD,UAAU,eAChC,yBAAKA,UAAU,6CACX,yBAAKA,UAAU,mCACX,wBAAIA,UAAU,cAAd,eACA,wBAAIA,UAAU,mCAAd,cACA,uBAAGA,UAAU,0BAAb,6CACA,kBAAC,IAAD,CAAME,GAAG,UACL,uBAAGF,UAAU,0BAAyB,yD,MCZnD,SAASO,IACpB,OACI,oCACI,kBAAC,EAAD,MACA,6BAASN,GAAG,QAAQD,UAAU,SAC1B,wBAAIA,UAAU,YAAd,0BACA,yBAAKA,UAAU,6CACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,QACX,yBAAKQ,MAAM,OAAOJ,IAAI,wDAAwDC,IAAI,mBAClF,yBAAKL,UAAU,kBACX,4CAIZ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,QACX,yBAAKQ,MAAM,OAAOJ,IAAI,sDAAsDC,IAAI,eAChF,yBAAKL,UAAU,kBACX,wCAIZ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,QACX,yBAAKQ,MAAM,OAAOJ,IAAI,wDAAwDC,IAAI,gBAClF,yBAAKL,UAAU,kBACX,4C,ICZjBS,E,iLAXP,OACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWN,IACjC,kBAAC,IAAD,CAAOI,KAAK,WAAWE,UAAWL,IAClC,kBAAC,IAAD,CAAOG,KAAK,SAASE,UAAWT,U,GAP9BU,a,YCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,IAAD,CAAeC,SAAUC,+BAAwB,kBAAC,EAAD,OAAyBC,SAASC,eAAe,SD0H5G,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b6c206bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'; \r\nimport './Header.css' \r\n\r\nexport default function Header(){\r\n    return(\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <nav className=\"mmn navbar navbar-expand-md\">\r\n                            <div className=\"logo\">\r\n                                \r\n                            </div>\r\n                            <div className=\"collapse navbar-collapse\" id=\"mmn1\"> \r\n                                    <ul className=\"header-menu navbar-nav text-capitalize\">\r\n                                        <li className=\"nav-link\">\r\n                                            <Link to=\"/\">\r\n                                                <a className=\"a\"><strong>Home</strong></a>\r\n                                            </Link>\r\n                                        </li>\r\n                                        <li className=\"nav-link\">\r\n                                            <Link to=\"/contact\">\r\n                                                <a className=\"a\"><strong>Contact</strong></a>\r\n                                            </Link>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>        \r\n    );\r\n}","import React from 'react';\r\nimport Header from './Header';\r\nimport './GetStart.css';\r\n\r\nexport default function GetStart(){\r\n    return(\r\n        <>\r\n            <Header />\r\n            <section className=\"back\">\r\n                <div className=\"first-content\">\r\n                    <div className=\"second-content\">\r\n                        <div className=\"img-start\">\r\n                            <img src=\"https://image.freepik.com/free-vector/young-girl-sitting-floor-with-laptop_102172-101.jpg\" alt=\"image\">\r\n                            </img>\r\n                        </div>\r\n                        <div className=\"text-start\">\r\n                            <h1 className=\"h1-start\">Febriana Pamungkasari</h1>\r\n                            <p className=\"p-start\">I'am just an ordinary girl who love to know about everything and learn new thing.\r\n                                I'm a student of Universitas Gadjah Mada in major Computer and Information System. I learn about code,\r\n                                design, and multimedia. \r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom'; \r\nimport './LandingPage.css' ;\r\nimport Header from './Header';\r\n\r\nexport default function LandingPage(){\r\n    return(\r\n        <div>\r\n            <Header />\r\n            <section id=\"banner-area\" className=\"banner-area\">\r\n                <div className=\"container d-flex h-100 align-items-center\">\r\n                    <div className=\" header-content wow zoomIn slow\">\r\n                        <h4 className=\"text-white\">Hello, I Am</h4>\r\n                        <h3 className=\"text-white m-top-20 m-bottom-35\">Febriana P</h3>\r\n                        <p className=\"text-white m-bottom-40\">I'am a student of Universitas Gadjah Mada</p>\r\n                        <Link to=\"/start\">\r\n                            <a className=\"btn btn-primary btn-lg\"><strong>Get To Know Me!</strong></a>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Header from './Header';\r\nimport './Contact.css'\r\n\r\nexport default function ContactPage(){\r\n    return(\r\n        <>\r\n            <Header />\r\n            <section id=\"about\" className=\"about\">\r\n                <h4 className=\"feedback\">You Can Contact Me At!</h4>\r\n                <div className=\"container d-flex h-100 align-items-center\">\r\n                    <div className=\"card-spacing\">\r\n                        <div className=\"card\">\r\n                            <img width=\"100%\" src=\"https://image.flaticon.com/icons/svg/1051/1051262.svg\" alt=\"instagram logo\"></img>\r\n                            <div className=\"card-container\">\r\n                                <h4>Instagram</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-spacing\">\r\n                        <div className=\"card\">\r\n                            <img width=\"100%\" src=\"https://image.flaticon.com/icons/svg/387/387597.svg\" alt=\"email logo\"></img>\r\n                            <div className=\"card-container\">\r\n                                <h4>Email</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-spacing\">\r\n                        <div className=\"card\">\r\n                            <img width=\"100%\" src=\"https://image.flaticon.com/icons/svg/1051/1051275.svg\" alt=\"github logo\"></img>\r\n                            <div className=\"card-container\">\r\n                                <h4>Github</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </section>\r\n        </>\r\n    );\r\n}","import React, {Component} from 'react';  \nimport {Switch, Route, BrowserRouter} from 'react-router-dom';  \nimport GetStart from './Routing/GetStart';\nimport LandingPage from './Routing/LandingPage';\nimport ContactPage from './Routing/Contact';\n\nclass App extends Component {  \n    render() {  \n        return (  \n        <BrowserRouter>\n            <Switch>  \n                <Route path=\"/\" exact component={LandingPage}/>\n                <Route path=\"/contact\" component={ContactPage}/>\n                <Route path=\"/start\" component={GetStart}/>\n            </Switch>\n        </BrowserRouter>                   \n    );  \n}  \n}  \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './Card/card.css';\nimport './Like/Home.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}